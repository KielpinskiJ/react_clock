{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getCurrentTime","Date","toUTCString","slice","Clock","state","currentTime","intervalId","this","window","setInterval","setState","console","info","prevProps","props","clockName","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUA,SAASA,IACP,OAAO,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGvC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,YAAaN,KAFjB,EAKEO,gBALF,yDAOE,WAA2B,IAAD,OACxBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CACZL,YAAaN,MAGfY,QAAQC,KAAK,EAAKR,MAAMC,eACvB,OAdP,gCAiBE,SAAmBQ,GACbN,KAAKO,MAAMC,YAAcF,EAAUE,WAErCJ,QAAQK,MAAR,uBAA8BH,EAAUE,UAAxC,eAAwDR,KAAKO,MAAMC,cApBzE,kCAwBE,WACEP,OAAOS,cAAcV,KAAKD,cAzB9B,oBA4BE,WACE,IAAQD,EAAgBE,KAAKH,MAArBC,YACAU,EAAcR,KAAKO,MAAnBC,UAER,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCH,IAEhC,YAED,sBAAMG,UAAU,cAAhB,SACGb,WAvCX,GAA2Bc,IAAMC,WCVjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAyB,CACvBsB,UAAU,EACVX,UAAW,WAHf,EAMET,gBANF,IAyBEqB,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKnB,SAAS,CACZgB,UAAU,KA5BhB,EAgCEI,YAAc,WACZ,EAAKpB,SAAS,CACZgB,UAAU,KAlChB,uDAQE,WAA2B,IAAD,OACxBnB,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CACZK,UAAWM,QAEZ,MAEHU,SAASC,iBAAiB,cAAezB,KAAKoB,mBAC9CI,SAASC,iBAAiB,QAASzB,KAAKuB,eAhB5C,kCAmBE,WACEtB,OAAOS,cAAcV,KAAKD,YAC1ByB,SAASE,oBAAoB,cAAe1B,KAAKoB,mBACjDI,SAASE,oBAAoB,cAAe1B,KAAKuB,eAtBrD,oBAsCE,WACE,MAAgCvB,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,UAElB,OACE,sBAAKG,UAAU,MAAf,UACE,6CACEQ,GAAY,cAAC,EAAD,CAAOX,UAAWA,WA5CxC,GAAyBI,IAAMC,WCZ/Bc,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.f445cba8.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  clockName: string;\n}\n\ninterface State {\n  currentTime: string;\n}\n\nfunction getCurrentTime() {\n  return new Date().toUTCString().slice(-12, -4);\n}\n\nexport class Clock extends React.Component<ClockProps, State> {\n  state: Readonly<State> = {\n    currentTime: getCurrentTime(),\n  };\n\n  intervalId: number | undefined;\n\n  componentDidMount(): void {\n    this.intervalId = window.setInterval(() => {\n      this.setState({\n        currentTime: getCurrentTime(),\n      });\n      // eslint-disable-next-line no-console\n      console.info(this.state.currentTime);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (this.props.clockName !== prevProps.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalId);\n  }\n\n  render(): React.ReactNode {\n    const { currentTime } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{clockName}</strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {currentTime}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends React.Component<PropertyDescriptor, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  intervalId: number | undefined;\n\n  componentDidMount(): void {\n    this.intervalId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalId);\n    document.removeEventListener('contextmenu', this.handleContextMenu);\n    document.removeEventListener('contextmenu', this.handleClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  handleClick = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render(): React.ReactNode {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        { hasClock && <Clock clockName={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}